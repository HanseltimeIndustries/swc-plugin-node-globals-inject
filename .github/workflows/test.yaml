name: Tests

on:
  merge_group:
  pull_request:
    types: ["opened", "reopened", "synchronize"]
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: "always"
  # For faster CI
  RUST_LOG: "off"
  # This ensures make commands don't do fixes
  NO_FIX: "true"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: "${{ github.event_name == 'pull_request' }}"

jobs:
  cargo-fmt:
    name: Cargo fmt
    runs-on: ubuntu-latest
    env:
      RUST_LOG: "0"
    steps:
      - uses: actions/checkout@v4

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt

      - name: "Cargo Fmt"
        run: make fmt

  cargo-clippy:
    name: Cargo clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy

      - name: "Cargo Clippy"
        run: make clippy

  cargo-deny:
    name: Check license of dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Install cargo-deny
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-deny@0.14.15

      - name: Check licenses
        run: |
          make licenses-check

      - name: Check Bans
        run: |
          make bans-check

  cargo-check:
    name: Check
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1

      # Ensure that all components are compilable.
      - name: Run cargo check for all targets
        run: cargo check --all --all-targets

  cargo-test:
    name: Cargo Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    steps:
      - uses: actions/checkout@v4

      - run: corepack enable

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: wasm32-wasip1

      - name: Run cargo test
        run: |
          make test

  node-int-test:
    name: Node Integration Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    steps:
      - uses: actions/checkout@v4

      - run: corepack enable

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: wasm32-wasip1

      - name: Run node-int-test
        run: |
          make node-int-test

  done:
    needs:
      - cargo-fmt
      - cargo-clippy
      - cargo-deny
      - cargo-check
      - cargo-test
    runs-on: ubuntu-latest
    name: Done
    steps:
      - run: exit 1
        if: ${{ always() && (contains(needs.*.result, 'failure') || contains(needs.*.result, 'skipped') || contains(needs.*.result, 'cancelled')) }}